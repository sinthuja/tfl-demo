<?xml version="1.0" encoding="UTF-8"?>

<templateDomain name="BusDelayTracker">
  <description>Tracking delayed buses of a bus stop</description>
  <templates>
    <template name="Delayed buses">
      <description>To track the delayed buses of a bus stop</description>
      <executionPlan><![CDATA[
                                /* Enter a unique ExecutionPlan */
                                @Plan:name('delayedBusesPlan')
                 
                                /* Enter a unique description for ExecutionPlan */
                                -- @Plan:description('ExecutionPlan')
                 
                                /* define streams and write query here ... */
                 
                                @Import('lateDecisionStream:1.0.0')
                                define stream lateDecisionStream (stopId string, busId string, timeStamp long, lastArrivedTimestamp long, isArrived bool);

                 
                                @Export('lateEmailAlertStream:1.0.0')
                                define stream lateEmailAlertStream (name string, delayInMinutes int, subscribers string);

                                @From(eventtable='rdbms', datasource.name='WSO2_GEO_DB', table.name='StopTable')
                                define table stopTable (name string, id string, naptan string, sequence int, line string, direction int, latitude double, longitude double);
                 
                                from lateDecisionStream[isArrived!=true AND (timeStamp- lastArrivedTimestamp) > 60000]#window.length(1) join  stopTable
                                on stopTable.id == lateDecisionStream.stopId
                                select stopTable.name, math:round((timeStamp - lastArrivedTimestamp) / 60000F) as delayInMinutes, "$emailAddresses" as subscribers  
                                having name == "$busStopName"
                                insert into lateEmailAlertStream;

                                 ]]></executionPlan>
      <parameters>
        <parameter name="busStopName" type="string">
          <displayName>Bus stop name</displayName>
          <description>Bus stop to be tracked</description>
          <defaultValue>New Oxford Street</defaultValue>
        </parameter>
        <parameter name="emailAddresses" type="string">
          <displayName>Email addresses list</displayName>
          <description>Comma separated list of email addresses</description>
          <defaultValue></defaultValue>
        </parameter>
      </parameters>
    </template>
  </templates>
  <streams>
    <stream>                          
                        {
                          "streamId": "lateDecisionStream:1.0.0",
                          "name": "lateDecisionStream",
                          "version": "1.0.0",
                          "nickName": "",
                          "description": "",
                          "metaData": [] ,
                          "correlationData": [],
                          "payloadData": [
                            {
                              "name": "stopId",
                              "type": "STRING"
                            },
                            {
                              "name": "busId",
                              "type": "STRING"
                            },
                            {
                              "name": "timeStamp",
                              "type": "LONG"
                            },
                            {
                              "name": "lastArrivedTimestamp",
                              "type": "LONG"
                            },
                            {
                              "name": "isArrived",
                              "type": "BOOL"
                            }
                          ]
                        }
                                                                
                    </stream>
    <stream>
                            {
                            "streamId": "lateEmailAlertStream:1.0.0",
                            "name": "lateEmailAlertStream",
                            "version": "1.0.0",
                            "nickName": "",
                            "description": "",
                            "metaData": [] ,
                            "correlationData": [],
                            "payloadData": [
                            {
                              "name": "name",
                              "type": "STRING"
                            },
                            {
                              "name": "delayInMinutes",
                              "type": "INT"
                            },
                            {
                              "name": "subscribers",
                              "type": "STRING"
                            }
                          ]
                            }
                        </stream>
  </streams>
</templateDomain>
